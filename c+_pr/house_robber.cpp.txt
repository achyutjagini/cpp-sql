class Solution {
public:
    int rob(vector<int>& nums) {
        // State: dp[i] -> max money till house i.

        // Base Condition: dp[0] = nums[0]; dp[1] = max(nums[0], nums[1]);

        // Transition: dp[i] = max(nums[i] + dp[i-2], dp[i-1]);
        int n = nums.size();
        if (n < 2) return nums[0];

        int dp[n];
        dp[0] = nums[0];
        dp[1] = max(nums[0], nums[1]);

        if (n < 3) return max(dp[0], dp[1]);

        for (int i = 2; i < n; i++) 
        {
            dp[i] = max(nums[i] + dp[i-2], dp[i-1]);
        }
        return max(dp[n-2], dp[n-1]);
    }
};